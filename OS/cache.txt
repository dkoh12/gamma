

https://www.computerhope.com/jargon/c/cache.htm

http://www.guidingtech.com/53366/cpu-cache-explained/

L1, L2, L3 cache

L1 is located in the CPU.
L2 and L3 are on the processor chip but not in the CPU itself.


CPUs run a lot faster than memory. So that's why we split up memory into hierarchy


When 2 threads of the same process runs on different cores, it's possible that the L1 caches have different values for the shared variable. Even though the hardward generally reaches consistency, in Java the 'volatile' keyword is used to make sure a shared_variable is thread safe by making sure this variable is never cached.



#BUS
bus basically allows different parts of the computer to communicate to each other: I/O, CPU, RAM, wifi, etc

USB: Universal Serial Bus
-> designed to standardize connection to computer peripherals: keyboard, mouse, digital cameras, printers, disk drives, portable media players, network adapters, PC




#Memcache
Memcached is a free and open source, high-performance, distributed memory object caching system. The primary objective of Memcached is to enhance the response time for data that can otherwise be recovered or constructed from some other source or database. It is used to avoid the need to operate SQL data base or another source repetitively to fetch data for concurrent request.

Memcached can be used for

•  Social Networking -> Profile Caching
•  Content Aggregation -> HTML/ Page Caching
•  Ad targeting -> Cookie/profile tracking
•  Relationship -> Session caching
•  E-commerce -> Session and HTML caching
•  Location-based services -> Data-base query scaling
•  Gaming and entertainment -> Session caching

Memcache helps in

•  Speed up application processes
•  It determines what to store and what not to
•  Reduce the number of retrieval requests to the database
•  Cuts down the I/O ( Input/Output) access (hard disk)

Drawback of Memcached is

•  It is not a persistent data store
•  Not a database
•  It is not an application specific
•  It cannot cache large object

#Important features of Memcached includes

•  CAS Tokens: A CAS token is attached to any object retrieved from cache. You can use that token to save your updated object.
•  Callbacks: It simplifies the code
•  getDelayed: It reduces the delay time of your script which is waiting for results to come back from server
•  Binary protocol: You can use binary protocol instead of ASCII with the newer client
•  Igbinary: Previously, client always used to do serialization of the value with complex data, but with Memcached you can use igbinary option.

#Explain whether it is possible to share a single instance of a Memcache between multiple projects?

Yes, it is possible to share a single instance of Memcache between multiple projects. Memcache is a memory store space, and you can run memcache on one or more servers. You can also configure your client to speak to a particular set of instances. So, you can run two different Memcache processes on the same host and yet they are completely independent. Unless, if you have partitioned your data, then it becomes necessary to know from which instance to get the data from or to put into.

#You are having multiple Memcache servers, in which one of the memcacher server fails, and it has your data, will it ever try to get key data from that one failed server?

The data in the failed server won’t get removed, but there is a provision for auto-failure, which you can configure for multiple nodes. Fail-over can be triggered during any kind of socket or Memcached server level errors and not during normal client errors like adding an existing key, etc.

#Explain how you can minimize the Memcached server outages?

•  When one instance fails, several of them goes down, this will put larger load on the database server when lost data is reloaded as client make a request. To avoid this, if your code has been written to minimize cache stampedes then it will leave a minimal impact
•  Another way is to bring up an instance of Memcached on a new machine using the lost machines IP address
•  Code is another option to minimize server outages as it gives you the liberty to change the Memcached server list with minimal work
•  Setting timeout value is another option that some Memcached clients implement for Memcached server outage. When your Memcached server goes down, the client will keep trying to send a request till the time-out limit is reached

#Explain how you can update Memcached when data changes?

When data changes you can update Memcached by

•  Clearing the Cache proactively: Clearing the cache when an insert or update is made
•  Resetting the Cache: It is similar to the first method but rather than just deleting the keys and waiting for the next request for the data to refresh the cache, reset the values after the insert or update.

#Explain what is Dogpile effect? How can you prevent this effect?

Dogpile effect is referred to the event when cache expires, and websites are hit by the multiple requests made by the client at the same time. This effect can be prevented by using semaphore lock. In this system when value expires, first process acquires the lock and starts generating new value.

#Explain how Memcached should not be used?

•  Memcached common misuse is to use it as a data store, and not as a cache
•  Never use Memcached as the only source of the information you need to run your application. Data should always be available through another source as well
•  Memcached is just a key or value store and cannot perform query over the data or iterate over the contents to extract information
•  Memcached does not offer any form of security either in encryption or authentication

#When server gets shut down does data stored in Memcached is still available?

Data stored in Memcached is not durable so if server is shut down or restarted then all the data stored in Memcached is deleted.

#Mention what is the difference between Memcache and Memcached?

•  Memcache: It is an extension that allows you to work through handy object-oriented (OOP’s) and procedural interfaces. It is designed to reduce database load in dynamic web applications.

•  Memcached: It is an extension that uses libmemcached library to provide API for communicating with Memcached servers. It is used to increase the dynamic web applications by alleviating database load. It is the latest API.
















